#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMA3A
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tma3a")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertpart2Picture(part2Picture instance);
    partial void Updatepart2Picture(part2Picture instance);
    partial void Deletepart2Picture(part2Picture instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["tma3aConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<part2Picture> part2Pictures
		{
			get
			{
				return this.GetTable<part2Picture>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.part2Pictures")]
	public partial class part2Picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _imageId;
		
		private string _imageCaption;
		
		private string _imageLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnimageIdChanging(int value);
    partial void OnimageIdChanged();
    partial void OnimageCaptionChanging(string value);
    partial void OnimageCaptionChanged();
    partial void OnimageLocationChanging(string value);
    partial void OnimageLocationChanged();
    #endregion
		
		public part2Picture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int imageId
		{
			get
			{
				return this._imageId;
			}
			set
			{
				if ((this._imageId != value))
				{
					this.OnimageIdChanging(value);
					this.SendPropertyChanging();
					this._imageId = value;
					this.SendPropertyChanged("imageId");
					this.OnimageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageCaption", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string imageCaption
		{
			get
			{
				return this._imageCaption;
			}
			set
			{
				if ((this._imageCaption != value))
				{
					this.OnimageCaptionChanging(value);
					this.SendPropertyChanging();
					this._imageCaption = value;
					this.SendPropertyChanged("imageCaption");
					this.OnimageCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageLocation", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string imageLocation
		{
			get
			{
				return this._imageLocation;
			}
			set
			{
				if ((this._imageLocation != value))
				{
					this.OnimageLocationChanging(value);
					this.SendPropertyChanging();
					this._imageLocation = value;
					this.SendPropertyChanged("imageLocation");
					this.OnimageLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
